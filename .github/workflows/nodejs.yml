name: Build binaries
on: [push]

jobs:
  linux64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version-file: '.node-version'
      - name: yarn update and lindist
        run: |
          # try and avoid timeout errors
          yarn config set network-timeout 100000 -g

          yarn update
          yarn build:rebuild_modules

          # verify that every module is runnable
          node tools/verify-module-build.mjs .

          # yarn build:sentry

          yarn run lindist

          # verify that every module is runnable
          node tools/verify-module-build.mjs electron-output/linux-unpacked/resources/app.asar

          # manually tar it, to preserve the symlinks
          cd electron-output
          mv linux-unpacked companion-x64
          tar -cvzf companion-x64.tar.gz companion-x64
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Determine files to upload
        id: filenames
        shell: bash
        run: |
          VERSION=$(cat ./BUILD)

          echo ::set-output name=sourcename::"electron-output/companion-x64.tar.gz"
          echo ::set-output name=targetname::"companion-x64-${VERSION}.tar.gz"
          echo ::set-output name=longversion::"${VERSION}"

      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: crazt-lindist
          path: ${{ steps.filenames.outputs.sourcename }}

  osx:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version-file: '.node-version'
      - name: yarn update and macdist
        run: |
          # try and avoid timeout errors
          yarn config set network-timeout 100000 -g

          yarn update
          yarn build:rebuild_modules

          # verify that every module is runnable
          node tools/verify-module-build.mjs .

          # yarn build:sentry

          yarn run macdist

          # verify that every module is runnable
          node tools/verify-module-build.mjs "electron-output/mac/Companion.app/Contents/Resources/app.asar"
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Determine files to upload
        id: filenames
        shell: bash
        run: |
          VERSION=$(cat ./BUILD)

          echo ::set-output name=sourcename::"electron-output/companion-mac-x64.dmg"
          echo ::set-output name=targetname::"companion-mac-x64-${VERSION}.dmg"
          echo ::set-output name=longversion::"${VERSION}"

      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: crazt-macdist
          path: ${{ steps.filenames.outputs.sourcename }}

  osx-arm64:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version-file: '.node-version'
      - name: yarn update and macarmdist
        run: |
          # try and avoid timeout errors
          yarn config set network-timeout 100000 -g

          yarn update
          yarn build:rebuild_modules

          # verify that every module is runnable
          node tools/verify-module-build.mjs .

          # yarn build:sentry

          yarn run macarmdist

          # verify that every module is runnable
          node tools/verify-module-build.mjs "electron-output/mac-arm64/Companion.app/Contents/Resources/app.asar"
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Determine files to upload
        id: filenames
        shell: bash
        run: |
          VERSION=$(cat ./BUILD)

          echo ::set-output name=sourcename::"electron-output/companion-mac-arm64.dmg"
          echo ::set-output name=targetname::"companion-mac-arm64-${VERSION}.dmg"
          echo ::set-output name=longversion::"${VERSION}"

      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: crazt-macarmdist
          path: ${{ steps.filenames.outputs.sourcename }}

  win64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version-file: '.node-version'
      - name: yarn update and windist
        shell: bash
        run: |
          # try and avoid timeout errors
          yarn config set network-timeout 100000 -g

          # This fixes it somehow, and without it we get no logs from any shell scripts which are run
          yarn config set script-shell bash

          yarn update
          yarn build:rebuild_modules

          # verify that every module is runnable
          node tools/verify-module-build.mjs .

          # yarn build:sentry

          yarn run windist

          # verify that every module is runnable
          node tools/verify-module-build.mjs electron-output/win-unpacked/resources/app.asar
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Determine files to upload
        id: filenames
        shell: bash
        run: |
          VERSION=$(cat ./BUILD)

          echo ::set-output name=sourcename::"electron-output/companion-win64.exe"
          echo ::set-output name=targetname::"companion-win64-${VERSION}.exe"
          echo ::set-output name=longversion::"${VERSION}"

      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: crazt-windist
          path: ${{ steps.filenames.outputs.sourcename }}
